.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_plot_wind_rose.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_wind_rose.py:


=====================================================================
Example on how to plot winds and relative humidity from sounding data
=====================================================================

This is an example of how to display wind rose and barb timeseries
from multiple days worth of sounding data.



.. image:: /source/auto_examples/images/sphx_glr_plot_wind_rose_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/miniconda3/envs/testenv/lib/python3.7/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.7/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/build/ANL-DIGR/ACT/act/plotting/WindRoseDisplay.py:147: RuntimeWarning: invalid value encountered in less
      the_range = np.logical_or(dir_data < deg_width / 2.,
    /home/travis/build/ANL-DIGR/ACT/act/plotting/WindRoseDisplay.py:148: RuntimeWarning: invalid value encountered in greater
      dir_data > 360. - deg_width / 2.)
    /home/travis/build/ANL-DIGR/ACT/act/plotting/WindRoseDisplay.py:151: RuntimeWarning: invalid value encountered in greater_equal
      dir_data >= dir_bins_mid[i] - deg_width / 2,
    /home/travis/build/ANL-DIGR/ACT/act/plotting/WindRoseDisplay.py:152: RuntimeWarning: invalid value encountered in less_equal
      dir_data <= dir_bins_mid[i] + deg_width / 2)





|


.. code-block:: default


    import act
    import numpy as np

    from matplotlib import pyplot as plt

    sonde_ds = act.io.armfiles.read_netcdf(
        act.tests.sample_files.EXAMPLE_TWP_SONDE_WILDCARD)

    WindDisplay = act.plotting.WindRoseDisplay(sonde_ds, figsize=(8, 10), subplot_shape=(2,))
    WindDisplay.plot('deg', 'wspd',
                     spd_bins=np.linspace(0, 25, 5), num_dirs=30,
                     tick_interval=2, subplot_index=(0,))


    BarbDisplay = act.plotting.TimeSeriesDisplay(
        {'sonde_darwin': sonde_ds}, figsize=(10, 5))
    WindDisplay.put_display_in_subplot(BarbDisplay, subplot_index=(1,))
    BarbDisplay.plot_time_height_xsection_from_1d_data('rh', 'pres',
                                                       cmap='coolwarm_r',
                                                       vmin=0, vmax=100,
                                                       num_time_periods=25)
    BarbDisplay.plot_barbs_from_spd_dir('deg', 'wspd', 'pres',
                                        num_barbs_x=20)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.248 seconds)


.. _sphx_glr_download_source_auto_examples_plot_wind_rose.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_wind_rose.py <plot_wind_rose.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_wind_rose.ipynb <plot_wind_rose.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
