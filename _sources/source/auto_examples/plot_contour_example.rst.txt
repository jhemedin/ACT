.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_plot_contour_example.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_contour_example.py:


=======================================
Example for plotting up a contour plot
=======================================

This is an example of how to prepare
and plot data for a contour plot

.. image:: ../../plot_contour_example.png



.. image:: /source/auto_examples/images/sphx_glr_plot_contour_example_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: In xarray version 0.13 `auto_combine` will be deprecated.
      coords=coords)
    /home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/xarray/backends/api.py:783: FutureWarning: Also `open_mfdataset` will no longer accept a `concat_dim` argument.
    To get equivalent behaviour from now on please use the new
    `combine_nested` function instead (or the `combine='nested'` option to
    `open_mfdataset`).The datasets supplied have global dimension coordinates. You may want
    to use the new `combine_by_coords` function (or the
    `combine='by_coords'` option to `open_mfdataset` to order the datasets
    before concatenation. Alternatively, to continue concatenating based
    on the order the datasets are supplied in in future, please use the
    new `combine_nested` function (or the `combine='nested'` option to
    open_mfdataset).
      coords=coords)





|


.. code-block:: default


    import act
    import glob
    import matplotlib.pyplot as plt

    files = glob.glob(act.tests.sample_files.EXAMPLE_MET_CONTOUR)
    time = '2019-05-08T04:00:00.000000000'
    data = {}
    fields = {}
    wind_fields = {}
    station_fields = {}
    for f in files:
        obj = act.io.armfiles.read_netcdf(f)
        data.update({f: obj})
        fields.update({f: ['lon', 'lat', 'temp_mean']})
        wind_fields.update({f: ['lon', 'lat',
                                'wspd_vec_mean', 'wdir_vec_mean']})
        station_fields.update({f: ['lon', 'lat', 'temp_mean',
                                   'atmos_pressure', 'vapor_pressure_mean',
                                   'rh_mean']})

    display = act.plotting.ContourDisplay(data, figsize=(8, 8))
    display.create_contour(fields=fields, time=time, levels=50)
    display.plot_vectors_from_spd_dir(fields=wind_fields, time=time, mesh=True,
                                      grid_delta=(0.1, 0.1))
    display.plot_station(fields=station_fields, time=time, markersize=7, color='red')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.500 seconds)


.. _sphx_glr_download_source_auto_examples_plot_contour_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_contour_example.py <plot_contour_example.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_contour_example.ipynb <plot_contour_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
